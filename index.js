import dotenv from "dotenv";
dotenv.config();
import { sendMail } from "./utils/sendMail.js";
import XLSX from "xlsx";
console.log("ENV:", {
  host: process.env.SMTP_HOST,
  port: process.env.SMTP_PORT,
  user: process.env.SMTP_USER,
  pass: process.env.SMTP_PASSWORD ? "‚úÖ" : "‚ùå",
});
const htmlTemplate = `
  <p>
    –ü—Ä–æ—Ö–∞–Ω–Ω—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –ì–ê–ó–ú–ï–†–ï–ñ–Ü 
    <a href="https://t.me/your_bot_link">–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –±–æ—Ç</a>
  </p>
`;

const workbook = XLSX.readFile("./emails.xlsx");
const sheetName = workbook.SheetNames[0];
const worksheet = workbook.Sheets[sheetName];
const data = XLSX.utils.sheet_to_json(worksheet);

const recipients = data.map((row) => row.email).filter(Boolean);

async function sendBulkEmails() {
  for (let i = 0; i < recipients.length; i++) {
    const to = recipients[i];

    try {
      await sendMail({
        from: process.env.SMTP_USER,
        to,
        subject: "–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –Ω–∞—à Telegram-–±–æ—Ç",
        html: htmlTemplate,
      });
      console.log(`‚úÖ –õ–∏—Å—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ: ${to}`);
    } catch (err) {
      console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–ª—è ${to}:`, err);
    }

    await new Promise((res) => setTimeout(res, 1000));
  }

  console.log("üì¨ –†–æ–∑—Å–∏–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
}

sendBulkEmails();
